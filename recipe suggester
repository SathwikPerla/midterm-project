<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dynamic Recipe Suggester</title>
    <style>
        body {
            font-family: 'Poppins', Arial, sans-serif;
            margin: 0;
            padding: 0;
            display: flex;
            flex-direction: column;
            align-items: center;
            background-color: #f9f9f9;
            color: #333;
            transition: background-color 0.3s ease;
        }
        h1 {
            margin-top: 20px;
            color: #444;
            font-size: 2.5em;
        }
        #app {
            margin-top: 20px;
            width: 90%;
            max-width: 600px;
            background-color: #fff;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            padding: 20px;
            border-radius: 10px;
            transition: transform 0.3s ease;
        }
        #ingredientInput {
            padding: 10px;
            width: 80%;
            border: 1px solid #ddd;
            border-radius: 5px;
            margin-bottom: 10px;
            box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.1);
        }
        button {
            padding: 10px 20px;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease;
            margin-top: 10px;
        }
        button:hover {
            transform: translateY(-2px);
        }
        #addIngredient {
            background-color: #28a745;
            margin-right: 10px;
        }
        #addIngredient:hover {
            background-color: #218838;
        }
        #refreshButton {
            background-color: #007bff;
        }
        #refreshButton:hover {
            background-color: #0056b3;
        }
        #ingredientList {
            list-style-type: none;
            padding: 0;
            margin: 10px 0;
        }
        #ingredientList li {
            background-color: #e9e9e9;
            padding: 10px;
            border-radius: 5px;
            margin-bottom: 5px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-right: 5px;
            transition: background-color 0.3s ease;
        }
        #ingredientList li:hover {
            background-color: #d6d6d6;
        }
        .remove-btn {
            background-color: #dc3545;
            color: white;
            border: none;
            padding: 5px 10px;
            border-radius: 3px;
            cursor: pointer;
            margin-left: 10px;
            transition: background-color 0.3s ease;
        }
        .remove-btn:hover {
            background-color: #c82333;
        }
        #recipes {
            margin-top: 20px;
        }
        #recipes ul {
            list-style-type: none;
            padding: 0;
        }
        #recipes ul li {
            background-color: #fff;
            padding: 15px;
            margin-bottom: 15px;
            border-radius: 10px;
            box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }
        #recipes ul li:hover {
            transform: translateY(-5px);
            box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);
        }
        #recipes img {
            max-width: 100%;
            border-radius: 10px;
            margin-bottom: 10px;
            transition: transform 0.3s ease;
        }
        #recipes img:hover {
            transform: scale(1.05);
        }
        #recipes h4 {
            margin-top: 10px;
            color: #444;
        }
        a {
            color: #007bff;
            text-decoration: none;
        }
        a:hover {
            text-decoration: underline;
        }
        body.fade-in {
            animation: fadeIn 1s ease forwards;
        }
        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }

        button.view-recipe-btn {
            background-color: #007bff;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease, transform 0.2s ease;
        }

        button.view-recipe-btn:hover {
            background-color: #0056b3;
            transform: translateY(-2px);
        }

        button.view-recipe-btn:focus {
            outline: none;
        }
    </style>
</head>
<body class="fade-in">
    <h1>Dynamic Recipe Suggester</h1>
    <div id="app">
        <input type="text" id="ingredientInput" placeholder="Add ingredient...">
        <button id="addIngredient">Add Ingredient</button>
        <button id="refreshButton">Refresh</button>
        <h3>Ingredients:</h3>
        <ul id="ingredientList"></ul>
        <div id="recipes">
            <h3>Recipe Suggestions:</h3>
            <ul id="recipeList"></ul>
        </div>
    </div>
    <script>
        const apiKey = '6c2f0813f86a4934a25cca3260bebc65'; 
        const ingredientInput = document.getElementById('ingredientInput');
        const ingredientList = document.getElementById('ingredientList');
        const recipeList = document.getElementById('recipeList');
        let ingredients = [];
       
        document.getElementById('addIngredient').addEventListener('click', function() {
            const ingredient = ingredientInput.value.trim().toLowerCase();
            if (ingredient && !ingredients.includes(ingredient)) {
                ingredients.push(ingredient);
                updateIngredientList();
                fetchRecipes();
            }
            ingredientInput.value = '';
        });

        document.getElementById('refreshButton').addEventListener('click', function() {
            if (ingredients.length > 0) {
                fetchRecipes();
            } else {
                recipeList.innerHTML = '<p>Please add some ingredients before refreshing.</p>';
            }
        });

        function updateIngredientList() {
            ingredientList.innerHTML = '';
            ingredients.forEach((ingredient, index) => {
                const li = document.createElement('li');
                li.textContent = ingredient;

                const removeBtn = document.createElement('button');
                removeBtn.textContent = 'X';
                removeBtn.classList.add('remove-btn');
               
                removeBtn.addEventListener('click', () => {
                    removeIngredient(index);
                });

                li.appendChild(removeBtn);
                ingredientList.appendChild(li);
            });
        }
        function removeIngredient(index) {
            ingredients.splice(index, 1);
            updateIngredientList();
            fetchRecipes(); 
        }
        function fetchRecipes() {
            if (ingredients.length === 0) {
                recipeList.innerHTML = '<p>Please add ingredients to search for recipes.</p>';
                return;
            }

            const ingredientQuery = ingredients.join(',');

           
            if (!ingredientQuery.trim()) {
                recipeList.innerHTML = '<p>No valid ingredients to search for.</p>';
                return;
            }

            fetch(`https://api.spoonacular.com/recipes/findByIngredients?ingredients=${ingredientQuery}&number=10&apiKey=${apiKey}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`API Error: ${response.statusText}`);
                    }
                    return response.json();
                })
                .then(data => {
                    if (Array.isArray(data)) {
                        displayRecipes(data);
                    } else {
                        recipeList.innerHTML = '<p>There was an error fetching the recipes.</p>';
                    }
                })
                .catch(error => {
                    console.error('Error fetching recipes:', error);
                    recipeList.innerHTML = `<p>Failed to fetch recipes: ${error.message}. Please try again later.</p>`;
                });
        }
        function displayRecipes(recipes) {
            recipeList.innerHTML = '';
            if (recipes.length === 0) {
                recipeList.innerHTML = '<p>No recipes found with the selected ingredients.</p>';
                return;
            }
            recipes.forEach(recipe => {
                const li = document.createElement('li');
                li.innerHTML = `
                    <strong>${recipe.title}</strong><br>
                    Used Ingredients: ${recipe.usedIngredientCount}<br>
                    Missed Ingredients: ${recipe.missedIngredientCount}<br>
                    <button class="view-recipe-btn" onclick="fetchRecipeDetails(${recipe.id})">View Recipe</button>
                `;
                recipeList.appendChild(li);
            });
        }

        function fetchRecipeDetails(recipeId) {
            fetch(`https://api.spoonacular.com/recipes/${recipeId}/information?apiKey=${apiKey}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`API Error: ${response.statusText}`);
                    }
                    return response.json();
                })
                .then(data => {
                    displayRecipeDetails(data);
                })
                .catch(error => {
                    console.error('Error fetching recipe details:', error);
                    recipeList.innerHTML = `<p>Failed to fetch recipe details: ${error.message}. Please try again later.</p>`;
                });
        }
        function displayRecipeDetails(recipe) {
            const recipeDetail = document.createElement('li');
            recipeDetail.innerHTML = `
                <strong>${recipe.title}</strong><br>
                Ready in: ${recipe.readyInMinutes} minutes<br>
                Servings: ${recipe.servings}<br>
                <img src="${recipe.image}" alt="${recipe.title}">
                <p>${recipe.instructions}</p>
                <a href="${recipe.sourceUrl}" target="_blank">View Full Recipe</a>
            `;
            recipeList.innerHTML = '';
            recipeList.appendChild(recipeDetail);
        }
    </script>
</body>
</html>
